# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - test_rollback
  - prod
  - prod_rollback

build-job:   # This job runs in the build stage.
  stage: build   
  script:
    - echo "Installing ansible modules...."
    - ansible-galaxy collection install cisco.asa
    - ansible-galaxy collection install cisco.ios
    - ansible-galaxy collection install cisco.nxos
    - pip3 install ansible-pylibssh
    - pip3 install pyats[full]

test-job:   # This job runs in the test stage. This deploys the change to the test environment and executes the testcases
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running deploy.bash in test environment...."
    - source Bash/deploy.bash
    - echo "Running PyAts testcases in test environment...."
    - python3 -u Tests/runtest.py

test-rollback-job:   # This job runs in the test stage. This deploys the change to the test environment and executes the testcases
  stage: test_rollback    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running rollback.bash in test environment...."
    - source Bash/rollback.bash
  needs: ["test-job"]
  when: on_failure

prod-job:      # This job runs in the production stage.
  stage: prod  # It only runs when job in the test stage complete successfully.
  script:
    - echo "Running deploy.bash in production environment...."
    - source Bash/deploy.bash
    - echo "Running PyAts testcases in production environment...."
    - python3 -u Tests/runtest.py
  when: manual

prod-rollback-job:   # This job runs in the production stage.
  stage: prod_rollback    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running rollback.bash in production environment...."
    - source Bash/rollback.bash
  needs: ["prod-job"]
  when: on_failure